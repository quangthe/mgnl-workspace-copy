name: Build Docker

on:
  push:
    branches:
      - main
      - releases/**
    # only trigger docker build if the following files changed
    paths:
      - Dockerfile
      - .github/workflows/*.yaml
  pull_request:
    branches:
      - main
      - releases/**
  workflow_dispatch:
  release:
    types: [published, edited]

env:
  GO_VERSION: "1.21"

jobs:
  test-app:
    runs-on: ubuntu-latest
    # Github Action not support env var in image tag
    # https://github.com/orgs/community/discussions/26324
    container: golang:1.21
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run app test
        run: |
          go fmt $(go list ./... | grep -v /vendor/)
          go vet $(go list ./... | grep -v /vendor/)
          go test -race $(go list ./... | grep -v /vendor/)

  build-and-push-images:
    runs-on: ubuntu-latest
    needs: [test-app]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: pcloud/mgnl-workspace-data-copy
          tags: |
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            APP_VERSION=${{ env.GITHUB_SHA }}
            GO_VERSION=${{ env.GO_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
